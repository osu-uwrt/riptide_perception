/**/dummydetections:
  ros__parameters:
    timer_rate: 0.1
    detection_data:
      test_detection:
        pose: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        noise: 0.05
        score: 0.8
        pub_invalid_orientation: false
        max_visible_dist: 2.0
      gate:
        pose: [3.9, 0.0, -0.35, 0.0, 0.0, -3.1415]
        noise: 0.05
        score: 0.8
        pub_invalid_orientation: false
        max_visible_dist: 2.0 #meters. if simulate_pool is true, object will not be published if the robot is farther from the object than this value
      earth_glyph:
        pose: [3.9, 0.4, -0.35, 0.0, 0.0, -3.1415]
        noise: 0.05
        score: 0.8
        pub_invalid_orientation: false
        max_visible_dist: 2.0
      buoy:
        pose: [2.0, 3.0, -0.5, 0.0, 0.0, -1.5707]
        noise: 0.05
        score: 0.8
        pub_invalid_orientation: false
        max_visible_dist: 2.0
      buoy_glyph_1:
        pose: [2.5, 3.0, -0.5, 0.0, 0.0, -1.5707]
        noise: 0.05
        score: 0.8
        pub_invalid_orientation: false
        max_visible_dist: 2.0
      buoy_glyph_2:
        pose: [5.0, -1.875, -1.625, 0.0, 0.0, 3.1415]
        noise: 0.05
        score: 0.8
        pub_invalid_orientation: false
        max_visible_dist: 2.0
      torpedo:
        pose: [2.75, 2.75, -0.5, 0.0, 0.0, -1.5707]
        noise: 0.05
        score: 0.8
        pub_invalid_orientation: false
        max_visible_dist: 2.0
      torpedo_upper_hole:
        pose: [3.0, 2.75, -0.5, 0.0, 0.0, -1.5707]
        noise: 0.05
        score: 0.8
        pub_invalid_orientation: false
        max_visible_dist: 1.25
      torpedo_lower_hole:
        pose: [2.5, 2.75, -0.5, 0.0, 0.0, -1.5707]
        noise: 0.05
        score: 0.8
        pub_invalid_orientation: false
        max_visible_dist: 1.25
    
    #POOL SIMULATION SETTINGS
    simulate_pool: true #if true, will monitor robot's odometry and only publish a detection for an object if the robot is looking at it
    
    #the following settings are only used when simulate_pool is TRUE
    camera_hfov: 60 #degrees. used to determine if robot is actually looking at the object.
    camera_vfov: 40 #degrees. used just like the hfov but not horizontal
    camera_frame: base_link #robot name will be inserted to the beginning of this frame to become <robot>/<frame_name>